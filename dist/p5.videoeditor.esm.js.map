{"version":3,"file":"p5.videoeditor.esm.js","sources":["../src/core/PluginManager.js","../src/core/RenderEngine.js","../src/utils/ErrorHandler.js","../src/core/Timeline.js","../src/core/FrameRecorder.js","../src/export/Exporter.js","../src/core/PlaybackController.js","../src/core/PerformanceManager.js","../src/utils/MemoryManager.js","../src/core/Keyframe.js","../src/utils/Easing.js","../src/clips/ClipBase.js","../src/clips/TextClip.js","../src/clips/ShapeClip.js","../src/clips/ImageClip.js","../src/clips/AudioClip.js","../src/clips/VideoClip.js","../src/clips/SlideShowClip.js","../src/effects/EffectBase.js","../src/p5.videoeditor.js"],"sourcesContent":["/**\n * @class PluginManager\n * @description Manages the registration and validation of all plugins.\n */\nexport class PluginManager {\n  constructor() {\n    /**\n     * @type {Array<object>}\n     */\n    this.plugins = [];\n  }\n\n  /**\n   * @method register\n   * @description Registers and validates a plugin.\n   * @param {object} plugin - The plugin object to register.\n   * @property {string} plugin.name - The name of the plugin.\n   * @property {string} plugin.type - The type of the plugin (e.g., 'effect', 'transition').\n   * @property {function} plugin.onLoad - The function to be called when the plugin is loaded.\n   */\n  register(plugin) {\n    if (!plugin) {\n      console.warn('Invalid plugin: Plugin object is null or undefined.');\n      return;\n    }\n\n    if (typeof plugin.name !== 'string' || plugin.name.trim() === '') {\n      console.warn(\n        'Invalid plugin: \"name\" must be a non-empty string.',\n        plugin\n      );\n      return;\n    }\n\n    if (typeof plugin.type !== 'string' || plugin.type.trim() === '') {\n      console.warn(\n        'Invalid plugin: \"type\" must be a non-empty string.',\n        plugin\n      );\n      return;\n    }\n\n    if (typeof plugin.onLoad !== 'function') {\n      console.warn('Invalid plugin: \"onLoad\" must be a function.', plugin);\n      return;\n    }\n\n    if (this.plugins.some((p) => p.name === plugin.name)) {\n      console.warn(`Plugin with name \"${plugin.name}\" is already registered.`);\n      return;\n    }\n\n    this.plugins.push(plugin);\n  }\n}\n","/**\n * @class RenderEngine\n * @description Handles all WebGL-based drawing operations.\n * Manages a multi-pass rendering pipeline for applying post-processing effects.\n */\nclass RenderEngine {\n  /**\n   * @constructor\n   * @param {p5} p - The p5.js instance used for drawing.\n   * @param {HTMLCanvasElement} canvas - The main canvas element.\n   */\n  constructor(p, canvas) {\n    this.p = p;\n    this.canvas = canvas;\n    this.width = canvas.width;\n    this.height = canvas.height;\n\n    // Create off-screen graphics buffers for multi-pass rendering\n    this.sceneBuffer = p.createGraphics(this.width, this.height, p.WEBGL);\n    this.effectBuffer = p.createGraphics(this.width, this.height, p.WEBGL);\n\n    this.shaders = {}; // Cache for compiled shaders\n    this.shaderPromises = {}; // Cache for shader loading promises\n    this.postProcessingEffects = []; // Queue of effects for the current frame\n  }\n\n  /**\n   * Loads a shader and caches the loading promise.\n   * @param {string} key - A unique key to identify the shader.\n   * @param {string} fragUrl - The URL to the fragment shader file.\n   */\n  loadShader(key, fragUrl) {\n    if (this.shaders[key] || this.shaderPromises[key]) {\n      return;\n    }\n    const vertUrl = 'src/shaders/passthrough.vert';\n    const promise = this.p.loadShader(vertUrl, fragUrl, (shader) => {\n      this.shaders[key] = shader;\n      delete this.shaderPromises[key];\n      console.log(`Shader \"${key}\" loaded.`);\n    });\n    this.shaderPromises[key] = promise;\n  }\n\n  /**\n   * Orchestrates the multi-pass rendering process.\n   * @param {Set<ClipBase>} clipsToRender - A Set of all clips that should be rendered this frame.\n   * @param {TransitionBase[]} activeTransitions - A list of transitions currently active.\n   * @param {number} time - The current time of the timeline.\n   */\n  async render(clipsToRender, activeTransitions, time) {\n    // Pass 1: Render the scene of clips and transitions to a buffer.\n    this._renderScene(clipsToRender, activeTransitions, time);\n\n    // Pass 2: Apply post-processing effects, ping-ponging between buffers.\n    const finalBuffer = await this._applyPostProcessing();\n\n    // Pass 3: Draw the final result to the main canvas.\n    this.p.image(finalBuffer, 0, 0);\n\n    // Clear the effects queue for the next frame.\n    this.postProcessingEffects = [];\n  }\n\n  /**\n   * @private\n   * Renders all active clips and transitions to the main scene buffer.\n   */\n  _renderScene(clipsToRender, activeTransitions, time) {\n    this.sceneBuffer.clear();\n    this.sceneBuffer.push();\n\n    const clipsInTransition = new Set();\n    for (const transition of activeTransitions) {\n      clipsInTransition.add(transition.fromClip);\n      clipsInTransition.add(transition.toClip);\n    }\n\n    const standaloneClips = [...clipsToRender].filter(\n      (clip) => !clipsInTransition.has(clip)\n    );\n    standaloneClips.sort((a, b) => a.layer - b.layer);\n\n    for (const clip of standaloneClips) {\n      const relativeTime = time - clip.start;\n      for (const effect of clip.effects) {\n        effect.apply(clip, this.sceneBuffer, relativeTime);\n      }\n      clip.render(this.sceneBuffer);\n    }\n\n    for (const transition of activeTransitions) {\n      transition.render(this.sceneBuffer, time);\n    }\n\n    this.sceneBuffer.pop();\n  }\n\n  /**\n   * @private\n   * Applies all queued post-processing effects to the scene buffer.\n   * @returns {p5.Graphics} The final graphics buffer with all effects applied.\n   */\n  async _applyPostProcessing() {\n    if (this.postProcessingEffects.length === 0) {\n      return this.sceneBuffer;\n    }\n\n    let sourceBuffer = this.sceneBuffer;\n    let destinationBuffer = this.effectBuffer;\n\n    for (let i = 0; i < this.postProcessingEffects.length; i++) {\n      const effect = this.postProcessingEffects[i];\n\n      if (this.shaderPromises[effect.type]) {\n        await this.shaderPromises[effect.type];\n      }\n\n      const shader = this.shaders[effect.type];\n      if (shader) {\n        destinationBuffer.shader(shader);\n        shader.setUniform('u_texture', sourceBuffer);\n\n        if (effect.uniforms) {\n          for (const [key, value] of Object.entries(effect.uniforms)) {\n            shader.setUniform(key, value);\n          }\n        }\n\n        destinationBuffer.rect(\n          -this.width / 2,\n          -this.height / 2,\n          this.width,\n          this.height\n        );\n\n        // Ping-pong: swap buffers for the next pass\n        [sourceBuffer, destinationBuffer] = [destinationBuffer, sourceBuffer];\n      }\n    }\n\n    // The final rendered image is in the last sourceBuffer\n    return sourceBuffer;\n  }\n}\n\nexport default RenderEngine;\n","/**\n * @class ErrorHandler\n * @description Provides a centralized way to handle and display errors and warnings.\n */\nclass ErrorHandler {\n  /**\n   * Handles critical errors that might stop the execution.\n   * Logs the error and throws it to stop the script.\n   * @param {string} message - The error message.\n   * @param {Error} [originalError] - The original error object.\n   */\n  static critical(message, originalError) {\n    console.error(`[p5.videoeditor.js] Critical Error: ${message}`);\n    if (originalError) {\n      console.error('Original Error:', originalError);\n    }\n    throw new Error(`[p5.videoeditor.js] ${message}`);\n  }\n\n  /**\n   * Handles warnings for non-critical issues.\n   * Logs a warning message to the console.\n   * @param {string} message - The warning message.\n   */\n  static warning(message) {\n    console.warn(`[p5.videoeditor.js] Warning: ${message}`);\n  }\n\n  /**\n   * Displays a user-friendly error message.\n   * In a real UI, this might show a modal or a notification.\n   * For now, it will just log a formatted error.\n   * @param {Error} error - The error object to display.\n   */\n  static showUserFriendlyError(error) {\n    // For now, just log a friendly message.\n    // This can be expanded to show an overlay on the p5.js canvas.\n    console.error(`[p5.videoeditor.js] An error occurred: ${error.message}`);\n  }\n}\n\nexport default ErrorHandler;\n","import { PluginManager } from './PluginManager.js';\nimport RenderEngine from './RenderEngine.js';\nimport ErrorHandler from '../utils/ErrorHandler.js';\n\n/**\n * @class Timeline\n * @description Manages the collection of clips, their timing, and the overall playback state.\n * It is the central component that orchestrates the animation. This class is typically\n * accessed via `editor.timeline`.\n */\nclass Timeline {\n  /**\n   * @constructor\n   * @param {p5} p - The p5.js instance.\n   * @param {HTMLCanvasElement} canvas - The canvas element.\n   * @param {object} [options={}] - Configuration options for the timeline.\n   * @param {number} [options.duration=10000] - The total duration of the timeline in milliseconds.\n   */\n  constructor(p, canvas, { duration = 10000 } = {}) {\n    this.duration = duration;\n    this.clips = [];\n    this.transitions = [];\n    this.time = 0;\n    this.isPlaying = false;\n\n    this.isBatching = false;\n    this.dirtyClips = new Set();\n    this.needsClipSorting = false;\n\n    this.renderEngine = new RenderEngine(p, canvas);\n    this.pluginManager = new PluginManager();\n    this.transitionTypes = new Map();\n    this.effectTypes = new Map();\n    this._pluginsLoaded = false;\n  }\n\n  /**\n   * Registers a plugin with the timeline.\n   * @param {object} plugin - The plugin to register.\n   * @example\n   * import MyCustomPlugin from './plugins/my-plugin.js';\n   * editor.timeline.use(new MyCustomPlugin());\n   */\n  use(plugin) {\n    this.pluginManager.register(plugin);\n  }\n\n  /**\n   * Adds a clip to the timeline. Typically called by the `VideoEditor` factory methods.\n   * @param {ClipBase} clip - The clip instance to add.\n   */\n  addClip(clip) {\n    this.clips.push(clip);\n    clip.timeline = this;\n\n    if (this.isBatching) {\n      this.needsClipSorting = true;\n    } else {\n      this.clips.sort((a, b) => a.layer - b.layer);\n    }\n  }\n\n  /**\n   * Registers a new transition type with the timeline.\n   * @param {string} name - The name of the transition (e.g., 'crossfade').\n   * @param {TransitionBase} transitionClass - The class constructor for the transition.\n   */\n  registerTransitionType(name, transitionClass) {\n    this.transitionTypes.set(name, transitionClass);\n  }\n\n  /**\n   * Registers a new effect type with the timeline.\n   * @param {string} name - The name of the effect (e.g., 'wiggle').\n   * @param {EffectBase} effectClass - The class constructor for the effect.\n   */\n  registerEffectType(name, effectClass) {\n    this.effectTypes.set(name, effectClass);\n  }\n\n  /**\n   * Creates and adds a transition between two clips.\n   * @param {object} options - The configuration for the transition.\n   * @param {ClipBase} options.fromClip - The clip to transition from.\n   * @param {ClipBase} options.toClip - The clip to transition to.\n   * @param {number} options.duration - The duration of the transition in milliseconds.\n   * @param {string} options.type - The type of transition (e.g., 'crossfade').\n   * @returns {TransitionBase|null} The created transition instance, or null if the type is unknown.\n   * @example\n   * const clipA = editor.createTextClip('A', { start: 0, duration: 2 });\n   * const clipB = editor.createTextClip('B', { start: 1, duration: 2 });\n   * editor.timeline.addTransition({ fromClip: clipA, toClip: clipB, duration: 1, type: 'crossfade' });\n   */\n  addTransition(options) {\n    const TransitionClass = this.transitionTypes.get(options.type);\n    if (!TransitionClass) {\n      ErrorHandler.warning(`Unknown transition type: ${options.type}`);\n      return null;\n    }\n    const transition = new TransitionClass(options);\n    this.transitions.push(transition);\n    return transition;\n  }\n\n  /**\n   * Groups multiple clip or keyframe additions into a single operation to optimize performance.\n   * @param {Function} callback - A function that contains the operations to be batched.\n   * @example\n   * editor.timeline.batch(() => {\n   *   editor.createTextClip(...);\n   *   editor.createImageClip(...);\n   * });\n   */\n  batch(callback) {\n    this.isBatching = true;\n    try {\n      callback();\n    } finally {\n      this.isBatching = false;\n      this.finalizeBatch();\n    }\n  }\n\n  /**\n   * @private\n   * Finalizes batch operations by sorting dirty clips and layers.\n   */\n  finalizeBatch() {\n    this.dirtyClips.forEach((clip) => clip.finalizeChanges());\n    this.dirtyClips.clear();\n\n    if (this.needsClipSorting) {\n      this.clips.sort((a, b) => a.layer - b.layer);\n      this.needsClipSorting = false;\n    }\n  }\n\n  /**\n   * Gets all clips that are directly active at the current time.\n   * Note: This does not include clips that are only active because of a transition.\n   * @returns {ClipBase[]} An array of active clips.\n   */\n  getActiveClips() {\n    const activeClips = [];\n    for (const clip of this.clips) {\n      if (this.time >= clip.start && this.time < clip.start + clip.duration) {\n        activeClips.push(clip);\n      }\n    }\n    return activeClips;\n  }\n\n  /**\n   * @private\n   * Determines which clips and transitions are active at a specific time.\n   * @param {number} time - The time to check against.\n   * @returns {{clipsToProcess: Set<ClipBase>, activeTransitions: TransitionBase[]}}\n   */\n  _getFrameState(time) {\n    const clipsToProcess = new Set();\n    const activeTransitions = [];\n\n    for (const clip of this.clips) {\n      if (time >= clip.start && time < clip.start + clip.duration) {\n        clipsToProcess.add(clip);\n      }\n    }\n\n    for (const transition of this.transitions) {\n      if (\n        time >= transition.start &&\n        time < transition.start + transition.duration\n      ) {\n        activeTransitions.push(transition);\n        clipsToProcess.add(transition.fromClip);\n        clipsToProcess.add(transition.toClip);\n      }\n    }\n\n    return { clipsToProcess, activeTransitions };\n  }\n\n  /**\n   * The main update loop for the timeline. It advances the time and updates all relevant clips.\n   * @param {p5} p - The p5.js instance.\n   * @internal\n   */\n  update(p) {\n    if (!this._pluginsLoaded) {\n      this._loadPlugins();\n      this._pluginsLoaded = true;\n    }\n\n    if (this.isPlaying) {\n      this.time += p.deltaTime;\n      if (this.time >= this.duration) {\n        this.time %= this.duration; // Frame-accurate loop\n      }\n    }\n\n    const { clipsToProcess } = this._getFrameState(this.time);\n\n    for (const clip of clipsToProcess) {\n      const relativeTime = this.time - clip.start;\n      clip.update(p, relativeTime);\n    }\n  }\n\n  /**\n   * Renders the current state of the timeline by delegating to the RenderEngine.\n   * @internal\n   */\n  async render() {\n    const { clipsToProcess, activeTransitions } = this._getFrameState(\n      this.time\n    );\n    await this.renderEngine.render(clipsToProcess, activeTransitions, this.time);\n  }\n\n  /**\n   * Starts or resumes playback.\n   */\n  play() {\n    this.isPlaying = true;\n  }\n\n  /**\n   * Pauses playback.\n   */\n  pause() {\n    this.isPlaying = false;\n  }\n\n  /**\n   * Seeks to a specific time in the timeline.\n   * @param {number} time - The time to seek to, in milliseconds.\n   */\n  seek(time) {\n    if (time >= 0 && time <= this.duration) {\n      this.time = time;\n    }\n  }\n\n  /**\n   * @private\n   * Loads all registered plugins by calling their onLoad methods.\n   */\n  _loadPlugins() {\n    for (const plugin of this.pluginManager.plugins) {\n      try {\n        plugin.onLoad(this);\n      } catch (error) {\n        ErrorHandler.critical(`Error loading plugin: ${plugin.name}`, error);\n      }\n    }\n  }\n}\n\nexport default Timeline;\n","/**\n * @class FrameRecorder\n * @description A class responsible for capturing and storing frames from a p5.js canvas.\n */\nclass FrameRecorder {\n  /**\n   * @param {HTMLCanvasElement} canvas - The p5.js canvas element to capture frames from.\n   */\n  constructor(canvas) {\n    if (!canvas || typeof canvas.toDataURL !== 'function') {\n      throw new Error(\n        'A valid canvas element must be provided to the FrameRecorder.'\n      );\n    }\n    this.canvas = canvas;\n    this.frames = [];\n  }\n\n  /**\n   * Starts a new recording session, clearing any previously captured frames.\n   */\n  start() {\n    this.frames = [];\n    console.log('Frame recording started.');\n  }\n\n  /**\n   * Captures the current content of the canvas and stores it as a WebP Data URL.\n   */\n  captureFrame() {\n    // Using 'image/webp' for a good balance of quality and file size.\n    // Quality is set to 0.8.\n    const frameDataUrl = this.canvas.toDataURL('image/webp', 0.8);\n    this.frames.push(frameDataUrl);\n  }\n\n  /**\n   * Stops the recording session. Currently a placeholder for future functionality.\n   */\n  stop() {\n    console.log(\n      `Frame recording stopped. Total frames captured: ${this.frames.length}`\n    );\n  }\n\n  /**\n   * Returns the array of captured frames.\n   * @returns {string[]} An array of base64 Data URLs representing the captured frames.\n   */\n  getFrames() {\n    return this.frames;\n  }\n}\n\nexport default FrameRecorder;\n","/**\n * @class Exporter\n * @description Manages the video export process by communicating with a Web Worker.\n */\nclass Exporter {\n  /**\n   * @param {object} [options={}] - Configuration options.\n   * @param {function} [options.onProgress] - Callback for progress updates.\n   * @param {function} [options.onLog] - Callback for log messages from FFmpeg.\n   * @param {function} [options.onError] - Callback for errors during the export process.\n   * @param {function} [options.onComplete] - Callback when the export is finished, receiving the video Blob.\n   */\n  constructor({ onProgress, onLog, onError, onComplete } = {}) {\n    this.worker = new Worker(new URL('./encoder.worker.js', import.meta.url), {\n      type: 'module',\n    });\n\n    this.onProgress = onProgress;\n    this.onLog = onLog;\n    this.onError = onError;\n    this.onComplete = onComplete;\n\n    this.worker.onmessage = this.handleWorkerMessage.bind(this);\n  }\n\n  /**\n   * Handles messages received from the encoding worker.\n   * @param {MessageEvent} event - The message event from the worker.\n   */\n  handleWorkerMessage({ data }) {\n    switch (data.type) {\n      case 'log':\n        if (this.onLog) this.onLog(data.data);\n        break;\n      case 'progress':\n        if (this.onProgress) this.onProgress(data.data);\n        break;\n      case 'error':\n        if (this.onError) this.onError(new Error(data.data));\n        break;\n      case 'done': {\n        const videoBlob = new Blob([data.data.buffer], { type: 'video/mp4' });\n        if (this.onComplete) this.onComplete(videoBlob);\n        break;\n      }\n      default:\n        console.warn(\n          'Exporter received unknown message type from worker:',\n          data.type\n        );\n    }\n  }\n\n  /**\n   * Starts the export process by sending the captured frames to the worker.\n   * @param {string[]} frames - An array of frame Data URLs.\n   * @param {number} [frameRate=30] - The frame rate for the output video.\n   */\n  export(frames, frameRate = 30) {\n    if (!frames || frames.length === 0) {\n      const error = new Error('Cannot export without frames.');\n      if (this.onError) {\n        this.onError(error);\n      } else {\n        throw error;\n      }\n      return;\n    }\n\n    if (this.onLog) this.onLog('Sending frames to export worker...');\n    this.worker.postMessage({ frames, frameRate });\n  }\n\n  /**\n   * Terminates the worker. Useful for cleanup when the exporter is no longer needed.\n   */\n  terminate() {\n    this.worker.terminate();\n  }\n}\n\nexport default Exporter;\n","import FrameRecorder from './FrameRecorder.js';\nimport Exporter from '../export/Exporter.js';\n\n/**\n * @class PlaybackController\n * @description Provides a UI and logic to control timeline playback and trigger exports.\n */\nclass PlaybackController {\n  /**\n   * @constructor\n   * @param {Timeline} timeline - The timeline instance to control.\n   * @param {HTMLCanvasElement} canvas - The p5.js canvas element for recording.\n   * @param {HTMLElement} container - The HTML element to append the UI controls to.\n   */\n  constructor(timeline, canvas, container) {\n    this.timeline = timeline;\n    this.canvas = canvas;\n    this.container = container;\n\n    // Initialize the components needed for exporting\n    this.frameRecorder = new FrameRecorder(this.canvas);\n    this.exporter = new Exporter({\n      onProgress: this.handleExportProgress.bind(this),\n      onComplete: this.handleExportComplete.bind(this),\n      onError: this.handleExportError.bind(this),\n      onLog: (log) => console.log('Exporter Log:', log),\n    });\n\n    this._createUI();\n  }\n\n  /**\n   * Creates and appends the playback and export UI controls.\n   * @private\n   */\n  _createUI() {\n    if (!this.container) return;\n\n    const wrapper = document.createElement('div');\n    wrapper.style.padding = '10px';\n    wrapper.style.backgroundColor = '#f0f0f0';\n    wrapper.style.borderTop = '1.5px solid #ccc';\n\n    // --- Basic Play/Pause Button ---\n    this.playButton = document.createElement('button');\n    this.playButton.textContent = 'Play';\n    this.playButton.onclick = () => {\n      if (this.timeline.isPlaying) {\n        this.pause();\n        this.playButton.textContent = 'Play';\n      } else {\n        this.play();\n        this.playButton.textContent = 'Pause';\n      }\n    };\n    wrapper.appendChild(this.playButton);\n\n    // --- Export Button ---\n    this.exportButton = document.createElement('button');\n    this.exportButton.textContent = 'Ekspor Video';\n    this.exportButton.style.marginLeft = '10px';\n    this.exportButton.onclick = () => this.startExportProcess();\n    wrapper.appendChild(this.exportButton);\n\n    // --- Status Display ---\n    this.exportStatus = document.createElement('span');\n    this.exportStatus.style.marginLeft = '15px';\n    this.exportStatus.style.fontFamily = 'monospace';\n    this.exportStatus.style.display = 'none'; // Hidden by default\n    wrapper.appendChild(this.exportStatus);\n\n    this.container.appendChild(wrapper);\n  }\n\n  /**\n   * Starts the entire export workflow: rendering frames and then encoding them.\n   * @private\n   */\n  async startExportProcess() {\n    this.exportButton.disabled = true;\n    this.playButton.disabled = true;\n    this.exportStatus.style.display = 'inline';\n    this.exportStatus.textContent = 'Rendering frames...';\n\n    // Ensure playback is paused and reset to the start\n    this.pause();\n    this.seek(0);\n\n    this.frameRecorder.start();\n\n    const frameRate = this.timeline.frameRate || 30;\n    const frameDuration = 1000 / frameRate;\n    const totalDuration = this.timeline.duration;\n\n    // Use a short timeout to allow the UI to update before the heavy loop starts.\n    await new Promise((resolve) => setTimeout(resolve, 50));\n\n    // --- Offline Rendering Loop ---\n    for (let time = 0; time <= totalDuration; time += frameDuration) {\n      this.timeline.seek(time); // Manually set the time\n      this.timeline.render(); // Manually trigger a render at that time\n      this.frameRecorder.captureFrame();\n    }\n\n    this.frameRecorder.stop();\n    this.exportStatus.textContent =\n      'Mengenkode video... (ini mungkin perlu waktu)';\n\n    // Hand off the captured frames to the exporter\n    this.exporter.export(this.frameRecorder.getFrames(), frameRate);\n  }\n\n  /**\n   * Handles progress updates from the exporter.\n   * @private\n   * @param {number} progress - The export progress percentage (0-100).\n   */\n  handleExportProgress(progress) {\n    this.exportStatus.textContent = `Mengenkode... ${progress}%`;\n  }\n\n  /**\n   * Handles the completion of the export process.\n   * @private\n   * @param {Blob} videoBlob - The resulting video file as a Blob.\n   */\n  handleExportComplete(videoBlob) {\n    this.exportStatus.textContent = 'Ekspor selesai! Memulai pengunduhan...';\n\n    // Create a temporary link to trigger the download\n    const url = URL.createObjectURL(videoBlob);\n    const a = document.createElement('a');\n    a.style.display = 'none';\n    a.href = url;\n    a.download = 'p5-video-export.mp4';\n    document.body.appendChild(a);\n    a.click();\n\n    // Clean up the temporary link and object URL\n    setTimeout(() => {\n      document.body.removeChild(a);\n      URL.revokeObjectURL(url);\n      this._resetUIState();\n    }, 100);\n  }\n\n  /**\n   * Handles any errors that occur during the export process.\n   * @private\n   * @param {Error} error - The error object.\n   */\n  handleExportError(error) {\n    console.error('Export failed:', error);\n    this.exportStatus.textContent = `Error: ${error.message}`;\n    // Do not reset immediately, so the user can see the error.\n    // Consider adding a close button for the error message in a real app.\n    setTimeout(() => this._resetUIState(), 5000); // Reset after 5 seconds\n  }\n\n  /**\n   * Resets the UI controls to their default, interactive state.\n   * @private\n   */\n  _resetUIState() {\n    this.exportButton.disabled = false;\n    this.playButton.disabled = false;\n    this.exportStatus.style.display = 'none';\n    this.exportStatus.textContent = '';\n  }\n\n  /**\n   * @method play\n   * @description Starts or resumes playback of the timeline.\n   */\n  play() {\n    this.timeline.play();\n  }\n\n  /**\n   * @method pause\n   * @description Pauses playback of the timeline.\n   */\n  pause() {\n    this.timeline.pause();\n  }\n\n  /**\n   * @method seek\n   * @description Jumps to a specific time on the timeline.\n   * @param {number} time - The time to seek to, in milliseconds.\n   */\n  seek(time) {\n    this.timeline.seek(time);\n  }\n}\n\nexport default PlaybackController;\n","/**\n * @class PerformanceManager\n * @description Monitors application performance, primarily frame rate.\n */\nclass PerformanceManager {\n  /**\n   * @constructor\n   * @param {object} options - Configuration options.\n   * @param {number} [options.frameRateThreshold=45] - The frame rate below which a warning is logged.\n   */\n  constructor({ frameRateThreshold = 45 } = {}) {\n    this.frameRateThreshold = frameRateThreshold;\n    this.enabled = true;\n  }\n\n  /**\n   * @method monitor\n   * @description Checks the current frame rate and logs a warning if it's below the threshold.\n   * @param {object} p5 - The p5.js instance.\n   */\n  monitor(p5) {\n    if (!this.enabled || !p5) {\n      return;\n    }\n\n    const currentFrameRate = p5.frameRate();\n    if (currentFrameRate < this.frameRateThreshold) {\n      console.warn(\n        `PerformanceWarning: Frame rate is ${currentFrameRate.toFixed(2)} FPS, which is below the threshold of ${this.frameRateThreshold} FPS.`\n      );\n    }\n  }\n\n  /**\n   * @method enable\n   * @description Enables the performance monitor.\n   */\n  enable() {\n    this.enabled = true;\n  }\n\n  /**\n   * @method disable\n   * @description Disables the performance monitor.\n   */\n  disable() {\n    this.enabled = false;\n  }\n}\n\nexport default PerformanceManager;\n","/**\n * @class MemoryManager\n * @description Manages memory by caching assets and providing methods to clear unused ones.\n */\nclass MemoryManager {\n  /**\n   * @constructor\n   */\n  constructor() {\n    this.cache = new Map();\n    this.enabled = true;\n  }\n\n  /**\n   * @method addAsset\n   * @description Adds an asset to the cache.\n   * @param {string} key - The unique key for the asset (e.g., image URL or asset ID).\n   * @param {*} asset - The asset to be cached.\n   */\n  addAsset(key, asset) {\n    if (!this.enabled) return;\n    this.cache.set(key, asset);\n    console.log(`Asset added to cache: ${key}`);\n  }\n\n  /**\n   * @method getAsset\n   * @description Retrieves an asset from the cache.\n   * @param {string} key - The key of the asset to retrieve.\n   * @returns {*} The cached asset, or undefined if the key does not exist.\n   */\n  getAsset(key) {\n    return this.cache.get(key);\n  }\n\n  /**\n   * @method clearUnusedAssets\n   * @description Removes assets from the cache that are not present in the provided list of active asset keys.\n   * @param {string[]} activeAssetKeys - An array of keys for assets that are currently active or required.\n   */\n  clearUnusedAssets(activeAssetKeys) {\n    if (!this.enabled) return;\n    const activeKeysSet = new Set(activeAssetKeys);\n    let clearedCount = 0;\n    for (const key of this.cache.keys()) {\n      if (!activeKeysSet.has(key)) {\n        this.cache.delete(key);\n        clearedCount++;\n      }\n    }\n    if (clearedCount > 0) {\n      console.log(`Cleared ${clearedCount} unused assets from cache.`);\n    }\n  }\n\n  /**\n   * @method clearAll\n   * @description Clears the entire asset cache unconditionally.\n   */\n  clearAll() {\n    this.cache.clear();\n    console.log('Cleared all assets from cache.');\n  }\n\n  /**\n   * @method enable\n   * @description Enables the memory manager.\n   */\n  enable() {\n    this.enabled = true;\n  }\n\n  /**\n   * @method disable\n   * @description Disables the memory manager. Caching and clearing will be skipped.\n   */\n  disable() {\n    this.enabled = false;\n  }\n}\n\nexport default MemoryManager;\n","class Keyframe {\n  /**\n   * @param {number} time - The time in milliseconds, relative to the clip's start.\n   * @param {*} value - The value of the property at this keyframe.\n   * @param {string} [easing='linear'] - The easing function to use from this keyframe to the next.\n   */\n  constructor(time, value, easing = 'linear') {\n    this.time = time;\n    this.value = value;\n    this.easing = easing;\n  }\n}\n\nexport default Keyframe;\n","/**\n * @namespace Easing\n * @description A collection of easing functions for controlling animation speed.\n * These functions take a single argument `t` (time) which is a value between 0 and 1,\n * and return a new value, also between 0 and 1.\n * Based on the work of Grégoire Divaret-Chauveau.\n * @see {@link https://gist.github.com/gre/1650294}\n */\nconst Easing = {\n  /**\n   * No easing, no acceleration.\n   * @param {number} t - Time.\n   * @returns {number}\n   */\n  linear: (t) => t,\n  /**\n   * Accelerating from zero velocity.\n   * @param {number} t - Time.\n   * @returns {number}\n   */\n  easeInQuad: (t) => t * t,\n  /**\n   * Decelerating to zero velocity.\n   * @param {number} t - Time.\n   * @returns {number}\n   */\n  easeOutQuad: (t) => t * (2 - t),\n  /**\n   * Acceleration until halfway, then deceleration.\n   * @param {number} t - Time.\n   * @returns {number}\n   */\n  easeInOutQuad: (t) => (t < 0.5 ? 2 * t * t : -1 + (4 - 2 * t) * t),\n  /**\n   * Accelerating from zero velocity.\n   * @param {number} t - Time.\n   * @returns {number}\n   */\n  easeInCubic: (t) => t * t * t,\n  /**\n   * Decelerating to zero velocity.\n   * @param {number} t - Time.\n   * @returns {number}\n   */\n  easeOutCubic: (t) => --t * t * t + 1,\n  /**\n   * Acceleration until halfway, then deceleration.\n   * @param {number} t - Time.\n   * @returns {number}\n   */\n  easeInOutCubic: (t) =>\n    t < 0.5 ? 4 * t * t * t : (t - 1) * (2 * t - 2) * (2 * t - 2) + 1,\n};\n\nexport default Easing;\n","import Keyframe from '../core/Keyframe.js';\nimport Easing from '../utils/Easing.js';\nimport ErrorHandler from '../utils/ErrorHandler.js';\n\n/**\n * @class ClipBase\n * @description The fundamental building block for all media types on the timeline.\n * It manages common properties like timing, position, rotation, scale, and opacity,\n * as well as the keyframe and effects systems. This class is not intended to be used\n * directly but rather to be extended by specific clip types (e.g., TextClip, ImageClip).\n */\nclass ClipBase {\n  /**\n   * @constructor\n   * @param {object} [options={}] - The configuration object for the clip.\n   * @param {number} [options.start=0] - The start time of the clip on the timeline, in milliseconds.\n   * @param {number} [options.duration=1000] - The duration of the clip, in milliseconds.\n   * @param {number} [options.layer=0] - The layer order for rendering. Higher numbers are rendered on top.\n   * @param {string|null} [options.assetKey=null] - A key to identify the asset associated with this clip, used for memory management.\n   * @param {object} [options.properties={}] - Initial values for animatable properties (e.g., x, y, rotation, scale, opacity).\n   */\n  constructor({\n    start = 0,\n    duration = 1000,\n    layer = 0,\n    assetKey = null,\n    ...options\n  } = {}) {\n    this.start = start;\n    this.duration = duration;\n    this.layer = layer;\n    this.assetKey = assetKey;\n    this.timeline = null;\n\n    this.properties = {\n      x: 0,\n      y: 0,\n      rotation: 0,\n      scale: 1,\n      opacity: 1,\n      ...(options.properties || {}),\n    };\n\n    this.initialProperties = JSON.parse(JSON.stringify(this.properties));\n    this.keyframes = {};\n    this.effects = [];\n  }\n\n  /**\n   * Adds a keyframe for a specific property.\n   * @param {string} property - The name of the property to animate (e.g., 'x', 'opacity').\n   * @param {number} time - The time for this keyframe, relative to the clip's start time, in milliseconds.\n   * @param {*} value - The value of the property at this keyframe.\n   * @param {string} [easing='linear'] - The easing function to use for the transition from the previous keyframe.\n   * @returns {this} The current clip instance for chaining.\n   * @example\n   * myClip.addKeyframe('x', 0, 100)\n   *       .addKeyframe('x', 1000, 200, 'easeInQuad');\n   */\n  addKeyframe(property, time, value, easing = 'linear') {\n    if (!Object.prototype.hasOwnProperty.call(this.properties, property)) {\n      ErrorHandler.critical(\n        `Property \"${property}\" is not a recognized or animatable property of this clip.`\n      );\n    }\n\n    if (!this.keyframes[property]) {\n      this.keyframes[property] = [];\n    }\n    this.keyframes[property].push(new Keyframe(time, value, easing));\n\n    if (this.timeline && this.timeline.isBatching) {\n      this.timeline.dirtyClips.add(this);\n    } else {\n      this.keyframes[property].sort((a, b) => a.time - b.time);\n    }\n    return this;\n  }\n\n  /**\n   * Adds an effect to the clip.\n   * @param {object} options - The configuration for the effect.\n   * @param {string} options.type - The type of effect to add (e.g., 'fadeIn', 'wiggle').\n   * @returns {this} The current clip instance for chaining.\n   * @example\n   * myClip.addEffect({ type: 'fadeIn', duration: 500 })\n   *       .addEffect({ type: 'fadeOut', start: 1500, duration: 500 });\n   */\n  addEffect(options = {}) {\n    const { type } = options;\n\n    if (!this.timeline) {\n      ErrorHandler.critical(\n        'Cannot add an effect to a clip that is not on a timeline.'\n      );\n      return this;\n    }\n\n    const EffectClass = this.timeline.effectTypes.get(type);\n    if (EffectClass) {\n      const effect = new EffectClass(options);\n      this.effects.push(effect);\n    } else {\n      ErrorHandler.warn(`Effect with type \"${type}\" not found.`);\n    }\n\n    return this; // Allow chaining\n  }\n\n  /**\n   * Sorts the keyframes for all properties.\n   * @internal\n   */\n  finalizeChanges() {\n    for (const prop in this.keyframes) {\n      if (Object.prototype.hasOwnProperty.call(this.keyframes, prop)) {\n        this.keyframes[prop].sort((a, b) => a.time - b.time);\n      }\n    }\n  }\n\n  /**\n   * Updates the clip's properties based on the current time.\n   * @internal\n   * @param {p5} p - The p5.js instance.\n   * @param {number} relativeTime - The current time within the clip's duration, in milliseconds.\n   */\n  update(p, relativeTime) {\n    Object.assign(this.properties, this.initialProperties);\n\n    for (const prop in this.keyframes) {\n      if (Object.prototype.hasOwnProperty.call(this.keyframes, prop)) {\n        this.properties[prop] = this._calculateValue(p, prop, relativeTime);\n      }\n    }\n  }\n\n  /**\n   * Calculates the interpolated value for a property at a given time.\n   * @private\n   * @param {p5} p - The p5.js instance.\n   * @param {string} prop - The name of the property to calculate.\n   * @param {number} time - The current time within the clip's duration.\n   * @returns {*} The interpolated value of the property.\n   */\n  _calculateValue(p, prop, time) {\n    const kfs = this.keyframes[prop];\n    if (!kfs || kfs.length === 0) {\n      return this.initialProperties[prop];\n    }\n\n    if (time <= kfs[0].time) {\n      return kfs[0].value;\n    }\n    if (time >= kfs[kfs.length - 1].time) {\n      return kfs[kfs.length - 1].value;\n    }\n\n    let low = 0;\n    let high = kfs.length - 1;\n    let prevKeyframeIndex = 0;\n\n    while (low <= high) {\n      const mid = Math.floor((low + high) / 2);\n      if (kfs[mid].time < time) {\n        prevKeyframeIndex = mid;\n        low = mid + 1;\n      } else if (kfs[mid].time > time) {\n        high = mid - 1;\n      } else {\n        return kfs[mid].value;\n      }\n    }\n\n    const prevKeyframe = kfs[prevKeyframeIndex];\n    const nextKeyframe = kfs[prevKeyframeIndex + 1];\n\n    const t =\n      (time - prevKeyframe.time) / (nextKeyframe.time - prevKeyframe.time);\n    const easingFunction = Easing[prevKeyframe.easing] || Easing.linear;\n    const easedT = easingFunction(t);\n\n    const from = prevKeyframe.value;\n    const to = nextKeyframe.value;\n\n    if (p.Color && from instanceof p.Color && to instanceof p.Color) {\n      return p.lerpColor(from, to, easedT);\n    }\n\n    return p.lerp(from, to, easedT);\n  }\n\n  /**\n   * Renders the clip's base transformations.\n   * @internal\n   * @param {p5} p - The p5.js instance or a p5.Graphics object.\n   */\n  render(p) {\n    p.push();\n    p.translate(this.properties.x, this.properties.y);\n    p.rotate(this.properties.rotation);\n    p.scale(this.properties.scale);\n  }\n}\n\nexport default ClipBase;\n","import ClipBase from './ClipBase.js';\n\n/**\n * @class TextClip\n * @extends ClipBase\n * @description A clip for rendering and animating text on the canvas.\n *\n * @param {string} text - The text content to display.\n * @param {object} [options={}] - Configuration options for the text clip. Inherits options from ClipBase.\n * @param {number} [options.fontSize=24] - The font size of the text.\n * @param {p5.Color|string} [options.fill='#ffffff'] - The fill color of the text.\n * @param {string} [options.align='center'] - The horizontal alignment of the text ('left', 'center', 'right').\n *\n * @example\n * let textClip = editor.createTextClip(\"Hello, p5.js!\", {\n *   start: 0,\n *   duration: 5000,\n *   properties: { x: 200, y: 200, fontSize: 32, fill: 'yellow' }\n * });\n * textClip.addKeyframe('opacity', 0, 0);\n * textClip.addKeyframe('opacity', 1000, 1);\n */\nclass TextClip extends ClipBase {\n  constructor(text, options = {}) {\n    super(options);\n    this.text = text;\n    this.properties.fontSize = options.fontSize || 24;\n    this.properties.fill = options.fill || '#ffffff';\n    this.properties.align = options.align || 'center';\n  }\n\n  /**\n   * Renders the text to the canvas with its current properties and transformations.\n   * This method is called automatically by the timeline in the draw loop.\n   * @param {p5} p - The p5.js instance.\n   * @param {number} relativeTime - The current time within the clip's duration.\n   */\n  render(p, relativeTime) {\n    super.render(p, relativeTime);\n\n    p.fill(this.properties.fill); // TODO: Handle opacity\n    p.textSize(this.properties.fontSize);\n    p.textAlign(this.properties.align, p.CENTER);\n    p.text(this.text, 0, 0);\n\n    p.pop();\n  }\n}\n\nexport default TextClip;\n","import ClipBase from './ClipBase.js';\n\n/**\n * @class ShapeClip\n * @extends ClipBase\n * @description A clip for drawing and animating basic p5.js shapes like rectangles and ellipses.\n *\n * @param {string} [shapeType='rect'] - The type of shape to draw ('rect' or 'ellipse').\n * @param {object} [options={}] - Configuration options for the shape clip. Inherits options from ClipBase.\n * @param {number} [options.width=100] - The width of the shape.\n * @param {number} [options.height=100] - The height of the shape.\n * @param {p5.Color|string} [options.fill='#ffffff'] - The fill color of the shape.\n * @param {p5.Color|string} [options.stroke='#000000'] - The stroke color of the shape.\n * @param {number} [options.strokeWeight=1] - The stroke weight of the shape.\n *\n * @example\n * let rectClip = editor.createShapeClip('rect', {\n *   start: 0,\n *   duration: 3000,\n *   properties: { width: 50, height: 50, fill: 'red' }\n * });\n * rectClip.addKeyframe('rotation', 0, 0);\n * rectClip.addKeyframe('rotation', 3000, Math.PI * 2);\n */\nclass ShapeClip extends ClipBase {\n  constructor(shapeType = 'rect', options = {}) {\n    super({\n      ...options,\n      properties: {\n        width: 100,\n        height: 100,\n        fill: '#ffffff',\n        stroke: '#000000',\n        strokeWeight: 1,\n        ...(options.properties || {}),\n      },\n    });\n    this.shapeType = shapeType;\n  }\n\n  /**\n   * Renders the shape to the canvas with its current properties and transformations.\n   * This method is called automatically by the timeline in the draw loop.\n   * @param {p5} p - The p5.js instance.\n   * @param {number} relativeTime - The current time within the clip's duration.\n   */\n  render(p, relativeTime) {\n    super.render(p, relativeTime);\n\n    p.fill(this.properties.fill); // TODO: Handle opacity\n    p.stroke(this.properties.stroke);\n    p.strokeWeight(this.properties.strokeWeight);\n\n    if (this.shapeType === 'rect') {\n      p.rectMode(p.CENTER);\n      p.rect(0, 0, this.properties.width, this.properties.height);\n    } else if (this.shapeType === 'ellipse') {\n      p.ellipseMode(p.CENTER);\n      p.ellipse(0, 0, this.properties.width, this.properties.height);\n    }\n\n    p.pop();\n  }\n}\n\nexport default ShapeClip;\n","import ClipBase from './ClipBase.js';\n\n/**\n * @class ImageClip\n * @extends ClipBase\n * @description A clip for displaying and animating an image on the canvas.\n *\n * @param {p5.Image|string} image - The p5.Image object or a URL to the image file.\n * If a URL is provided, it will be used as the `assetKey` for caching unless one is explicitly provided in the options.\n * @param {object} [options={}] - Configuration options for the image clip. Inherits options from ClipBase.\n *\n * @example\n * // Assuming 'logo.png' is preloaded\n * let imageClip = editor.createImageClip(logo, { start: 1000, duration: 4000 });\n * imageClip.addKeyframe('scale', 0, 0.5);\n * imageClip.addKeyframe('scale', 1000, 1);\n */\nclass ImageClip extends ClipBase {\n  constructor(image, options = {}) {\n    if (typeof image === 'string' && !options.assetKey) {\n      options.assetKey = image;\n    }\n    super({\n      ...options,\n      properties: {\n        width: image ? image.width : 0,\n        height: image ? image.height : 0,\n        ...(options.properties || {}),\n      },\n    });\n    this.image = image;\n  }\n\n  /**\n   * Renders the image to the canvas with its current transformations.\n   * This method is called automatically by the timeline in the draw loop.\n   * @param {p5} p - The p5.js instance.\n   * @param {number} relativeTime - The current time within the clip's duration.\n   */\n  render(p, relativeTime) {\n    super.render(p, relativeTime);\n\n    if (this.image) {\n      // TODO: Handle opacity with p.tint()\n      p.imageMode(p.CENTER);\n      p.image(this.image, 0, 0, this.properties.width, this.properties.height);\n    }\n\n    p.pop();\n  }\n}\n\nexport default ImageClip;\n","import ClipBase from './ClipBase.js';\n\n/**\n * @class AudioClip\n * @extends ClipBase\n * @description A clip for managing and playing audio on the timeline. It handles\n * playback synchronization and allows for keyframing audio properties like volume and pan.\n *\n * @param {p5.SoundFile|string} soundFile - The p5.SoundFile object or a URL to the audio file.\n * If a URL is provided, it will be used as the `assetKey` for caching unless one is explicitly provided in the options.\n * @param {object} [options={}] - Configuration options for the audio clip. Inherits options from ClipBase.\n *\n * @example\n * // Assuming 'mySound.mp3' is preloaded\n * let audioClip = editor.createAudioClip(mySound, { start: 2000, duration: 5000 });\n * audioClip.addKeyframe('volume', 0, 0); // Start silent\n * audioClip.addKeyframe('volume', 1000, 1); // Fade in\n * audioClip.addKeyframe('volume', 4000, 1); // Hold volume\n * audioClip.addKeyframe('volume', 5000, 0); // Fade out\n */\nclass AudioClip extends ClipBase {\n  constructor(soundFile, options = {}) {\n    if (typeof soundFile === 'string' && !options.assetKey) {\n      options.assetKey = soundFile;\n    }\n\n    const defaultAudioProps = {\n      volume: 1,\n      pan: 0,\n    };\n\n    super({\n      ...options,\n      properties: { ...defaultAudioProps, ...(options.properties || {}) },\n    });\n\n    this.soundFile = soundFile;\n    this._isPlaying = false;\n  }\n\n  /**\n   * Updates the audio playback state and properties based on the timeline's current position.\n   * This method is called automatically by the timeline in the draw loop.\n   * @param {p5} p - The p5.js instance.\n   * @param {number} relativeTime - The current time within the clip's duration, in milliseconds.\n   */\n  update(p, relativeTime) {\n    super.update(p, relativeTime);\n\n    if (!this.soundFile || typeof this.soundFile.play !== 'function') {\n      return;\n    }\n\n    this.soundFile.setVolume(this.properties.volume);\n    this.soundFile.pan(this.properties.pan);\n\n    const isWithinClipBounds =\n      relativeTime >= 0 && relativeTime < this.duration;\n\n    if (isWithinClipBounds && !this._isPlaying) {\n      const startTimeInSound = relativeTime / 1000;\n      if (startTimeInSound < this.soundFile.duration()) {\n        this.soundFile.play();\n        this.soundFile.jump(startTimeInSound);\n        this._isPlaying = true;\n      }\n    } else if (!isWithinClipBounds && this._isPlaying) {\n      this.soundFile.stop();\n      this._isPlaying = false;\n    }\n  }\n\n  /**\n   * Audio clips do not have a visual representation, so this method is a no-op.\n   * It exists to fulfill the ClipBase interface.\n   * It exists to fulfill the ClipBase interface.\n   */\n  render() {\n    // Audio clips are not rendered visually.\n  }\n}\n\nexport default AudioClip;\n","import ClipBase from './ClipBase.js';\nimport ErrorHandler from '../utils/ErrorHandler.js';\n\nconst ALLOWED_PROTOCOLS = ['http:', 'https:', 'blob:', 'data:'];\n\n/**\n * @class Hotspot\n * @description Represents a clickable area on a video clip.\n * This is a helper class used internally by VideoClip.\n */\nclass Hotspot {\n  constructor(options = {}) {\n    this.x = options.x || 0; // Center x, relative to the video's center\n    this.y = options.y || 0; // Center y, relative to the video's center\n    this.width = options.width || 100;\n    this.height = options.height || 50;\n    this.start = options.start || 0; // Start time relative to the video clip's start, in ms\n    this.duration = options.duration || 1000; // Duration in ms\n    this.onClick = options.onClick || (() => {});\n  }\n\n  /**\n   * Checks if a point is inside the hotspot's bounds.\n   * The coordinates are relative to the video clip's center.\n   * @param {number} px - The x-coordinate of the point to check.\n   * @param {number} py - The y-coordinate of the point to check.\n   * @returns {boolean} True if the point is inside the hotspot.\n   */\n  isHit(px, py) {\n    // Assuming imageMode(CENTER)\n    const halfW = this.width / 2;\n    const halfH = this.height / 2;\n    return (\n      px >= this.x - halfW &&\n      px <= this.x + halfW &&\n      py >= this.y - halfH &&\n      py <= this.y + halfH\n    );\n  }\n}\n\n/**\n * Represents a video clip that can be placed on the timeline.\n * Manages the playback and synchronization of an HTML5 video element.\n */\nclass VideoClip extends ClipBase {\n  /**\n   * @param {string} videoSrc - The source URL of the video.\n   * @param {object} options - The options for the clip, passed to ClipBase.\n   */\n  constructor(videoSrc, options = {}) {\n    super(options);\n\n    // Explicitly block javascript: URLs before attempting to parse.\n    if (\n      typeof videoSrc === 'string' &&\n      videoSrc.trim().toLowerCase().startsWith('javascript:')\n    ) {\n      ErrorHandler.critical(\n        `Unsafe video protocol: javascript:. Only safe protocols are allowed.`\n      );\n    }\n\n    try {\n      const url = new URL(videoSrc, document.baseURI);\n      if (!ALLOWED_PROTOCOLS.includes(url.protocol)) {\n        ErrorHandler.critical(\n          `Unsafe video protocol: ${url.protocol}. Only safe protocols are allowed.`\n        );\n      }\n    } catch (e) {\n      ErrorHandler.critical(`Invalid video source URL: ${videoSrc}`, e);\n    }\n\n    this.videoSrc = videoSrc;\n    this.isPlaying = false;\n    this.videoElement = null; // Element will be created lazily\n\n    // Add width and height to the animatable properties, with defaults.\n    this.properties.width = options.width || 1920; // Default to common video width\n    this.properties.height = options.height || 1080; // Default to common video height\n\n    this.hotspots = [];\n  }\n\n  /**\n   * @private\n   * Creates the video element and sets its initial properties.\n   * This is called lazily to avoid creating DOM elements unnecessarily.\n   */\n  _initElement() {\n    if (this.videoElement) return;\n\n    this.videoElement = document.createElement('video');\n    this.videoElement.src = this.videoSrc;\n    this.videoElement.preload = 'auto';\n    this.videoElement.muted = true; // Essential for browser autoplay policies\n    this.videoElement.playsInline = true; // Essential for mobile playback\n  }\n\n  /**\n   * Updates the video's state based on the timeline's current time.\n   * @param {p5} p - The p5.js instance.\n   * @param {number} relativeTime - The current time within the clip's duration, in milliseconds.\n   */\n  update(p, relativeTime) {\n    this._initElement(); // Ensure element exists\n    super.update(p, relativeTime);\n\n    // Synchronize video time with timeline time.\n    const targetTime = relativeTime / 1000;\n    const timeDifference = Math.abs(this.videoElement.currentTime - targetTime);\n    if (timeDifference > 0.05 || this.videoElement.paused) {\n      this.videoElement.currentTime = targetTime;\n    }\n\n    const isActive = relativeTime >= 0 && relativeTime < this.duration;\n    if (isActive && !this.isPlaying) {\n      const playPromise = this.videoElement.play();\n      if (playPromise !== undefined) {\n        playPromise.catch(() => {\n          // Autoplay was prevented.\n        });\n      }\n      this.isPlaying = true;\n    } else if (!isActive && this.isPlaying) {\n      this.videoElement.pause();\n      this.isPlaying = false;\n    }\n  }\n\n  /**\n   * Renders the video frame to the p5.js canvas if the clip is active.\n   * @param {p5} p - The p5.js instance.\n   * @param {number} relativeTime - The current time within the clip's duration.\n   */\n  /**\n   * Adds a clickable hotspot to the video clip.\n   * @param {object} options - Configuration for the hotspot.\n   * @param {number} options.x - Center x-coordinate, relative to the video's center.\n   * @param {number} options.y - Center y-coordinate, relative to the video's center.\n   * @param {number} options.width - Width of the hotspot.\n   * @param {number} options.height - Height of the hotspot.\n   * @param {number} options.start - Start time, relative to the clip's start, in ms.\n   * @param {number} options.duration - Duration of the hotspot, in ms.\n   * @param {Function} options.onClick - The callback function to execute when clicked.\n   * @returns {this} The current VideoClip instance for chaining.\n   */\n  addHotspot(options = {}) {\n    this.hotspots.push(new Hotspot(options));\n    return this;\n  }\n\n  /**\n   * Checks if a click at the given canvas coordinates hits any active hotspot.\n   * @internal\n   * @param {p5} p - The p5 instance.\n   * @param {number} canvasX - The mouseX coordinate on the canvas.\n   * @param {number} canvasY - The mouseY coordinate on the canvas.\n   * @param {number} relativeTime - The current time within the clip's duration.\n   */\n  checkClick(p, canvasX, canvasY, relativeTime) {\n    // This simple implementation does not account for parent clip rotation or scale.\n    // It assumes the video clip is only translated.\n    const clipCanvasX = this.properties.x;\n    const clipCanvasY = this.properties.y;\n\n    // Convert canvas coordinates to be relative to the clip's center.\n    const relativeX = canvasX - clipCanvasX;\n    const relativeY = canvasY - clipCanvasY;\n\n    for (const hotspot of this.hotspots) {\n      const isTimeActive =\n        relativeTime >= hotspot.start &&\n        relativeTime < hotspot.start + hotspot.duration;\n\n      if (isTimeActive && hotspot.isHit(relativeX, relativeY)) {\n        hotspot.onClick();\n        // Stop after the first hit to prevent multiple triggers.\n        return true;\n      }\n    }\n    return false;\n  }\n\n  render(p, relativeTime) {\n    this._initElement(); // Ensure element exists\n    super.render(p, relativeTime);\n\n    if (this.videoElement && this.videoElement.readyState >= 3) {\n      p.imageMode(p.CENTER);\n      p.image(\n        this.videoElement,\n        0,\n        0,\n        this.properties.width,\n        this.properties.height\n      );\n    }\n\n    // --- Render Hotspots (for debugging/visualization) ---\n    // Make sure we are in a p5.js environment with drawing capabilities\n    if (p.rectMode) {\n      p.push();\n      p.rectMode(p.CENTER);\n      p.stroke('rgba(255, 0, 0, 0.75)');\n      p.strokeWeight(2);\n      p.noFill();\n      for (const hotspot of this.hotspots) {\n        const isTimeActive =\n          relativeTime >= hotspot.start &&\n          relativeTime < hotspot.start + hotspot.duration;\n        if (isTimeActive) {\n          p.rect(hotspot.x, hotspot.y, hotspot.width, hotspot.height);\n        }\n      }\n      p.pop();\n    }\n    // --- End Hotspot Rendering ---\n\n    p.pop();\n  }\n}\n\nexport default VideoClip;\n","import ClipBase from './ClipBase.js';\n\n/**\n * @class SlideShowClip\n * @extends ClipBase\n * @description A special clip type that acts as a container for a sequence of slides.\n * Each slide can contain its own set of clips. Navigation between slides is controlled\n * by `next()` and `previous()` methods, making it suitable for presentations.\n */\nclass SlideShowClip extends ClipBase {\n  /**\n   * @constructor\n   * @param {object} [options={}] - The configuration object for the clip.\n   */\n  constructor(options = {}) {\n    super(options);\n    this.slides = [];\n    this.currentSlideIndex = 0;\n    this.slideActivationTime = 0;\n  }\n\n  /**\n   * Adds a new slide to the slideshow. A slide is an array of clips.\n   * @param {ClipBase[]} [clips=[]] - An array of clips that make up this slide.\n   * @returns {this} The current SlideShowClip instance for chaining.\n   * @example\n   * const slideShow = editor.createSlideShowClip({ duration: 30 });\n   * const slide1Clips = [\n   *   editor.createTextClip('Slide 1', { properties: { x: 100, y: 100 } }),\n   * ];\n   * slideShow.addSlide(slide1Clips);\n   */\n  addSlide(clips = []) {\n    this.slides.push(clips);\n    if (this.timeline) {\n      clips.forEach((clip) => {\n        clip.timeline = this.timeline;\n      });\n    }\n    return this;\n  }\n\n  /**\n   * Activates a slide at a specific index and resets its internal animation clock.\n   * @private\n   * @param {number} index - The index of the slide to activate.\n   */\n  _activateSlide(index) {\n    this.currentSlideIndex = index;\n    if (this.timeline) {\n      // Record the time (relative to the slideshow's start) that this slide became active.\n      // This allows animations within the slide to play relative to this moment.\n      this.slideActivationTime = this.timeline.time - this.start;\n    }\n  }\n\n  /**\n   * Navigates to the next slide.\n   */\n  next() {\n    if (this.currentSlideIndex < this.slides.length - 1) {\n      this._activateSlide(this.currentSlideIndex + 1);\n    }\n  }\n\n  /**\n   * Navigates to the previous slide.\n   */\n  previous() {\n    if (this.currentSlideIndex > 0) {\n      this._activateSlide(this.currentSlideIndex - 1);\n    }\n  }\n\n  /**\n   * Updates the properties of the slideshow container and the clips of the active slide.\n   * @internal\n   * @param {p5} p - The p5.js instance.\n   * @param {number} relativeTime - The current time within the slideshow's duration.\n   */\n  update(p, relativeTime) {\n    super.update(p, relativeTime); // Update container properties (e.g., position, scale)\n\n    const activeSlide = this.slides[this.currentSlideIndex];\n    if (activeSlide) {\n      const timeSinceSlideActivation = relativeTime - this.slideActivationTime;\n      activeSlide.forEach((clip) => {\n        // Update each clip on the current slide with a time relative to when the slide was shown.\n        clip.update(p, timeSinceSlideActivation);\n      });\n    }\n  }\n\n  /**\n   * Renders the currently active slide and its clips.\n   * This method is called by the RenderEngine.\n   * @internal\n   * @param {p5} p - The p5.js instance or a p5.Graphics object.\n   */\n  render(p) {\n    // First, apply the transformations of the slideshow container itself.\n    // super.render() handles the p.push() and transform operations.\n    super.render(p);\n\n    const activeSlide = this.slides[this.currentSlideIndex];\n    if (activeSlide) {\n      // Sort clips by layer, just like the main render engine.\n      const sortedClips = [...activeSlide].sort((a, b) => a.layer - b.layer);\n\n      // Render each clip within the current slide.\n      // The RenderEngine normally handles the push/pop for each clip. Since we are\n      // rendering these \"sub-clips\" manually, we must do it here.\n      sortedClips.forEach((clip) => {\n        clip.render(p); // This will do its own p.push() and transformations.\n        p.pop(); // We must provide the matching pop.\n      });\n    }\n  }\n}\n\nexport default SlideShowClip;\n","/**\n * @class EffectBase\n * @description The abstract base class for all visual effects.\n * It defines the standard interface that all effects must implement.\n */\nclass EffectBase {\n  /**\n   * @constructor\n   * @param {object} [options={}] - Configuration options for the effect.\n   * @param {number} [options.start=0] - The start time of the effect, relative to the clip's start, in milliseconds.\n   * @param {number} [options.duration=1000] - The duration of the effect in milliseconds.\n   */\n  constructor({ start = 0, duration = 1000 } = {}) {\n    this.start = start;\n    this.duration = duration;\n  }\n\n  /**\n   * Abstract method to apply the effect.\n   * This method must be implemented by any class that extends EffectBase.\n   * @param {ClipBase} clip - The clip to which the effect is being applied.\n   * @param {p5} p - The p5.js instance.\n   * @param {number} relativeTime - The current time within the clip's duration, in milliseconds.\n   */\n  apply(_clip, _p, _relativeTime) {\n    throw new Error('The \"apply()\" method must be implemented by a subclass.');\n  }\n}\n\nexport default EffectBase;\n","import Timeline from './core/Timeline.js';\nimport PlaybackController from './core/PlaybackController.js';\nimport PerformanceManager from './core/PerformanceManager.js';\nimport ErrorHandler from './utils/ErrorHandler.js';\nimport MemoryManager from './utils/MemoryManager.js';\nimport ClipBase from './clips/ClipBase.js';\nimport TextClip from './clips/TextClip.js';\nimport ShapeClip from './clips/ShapeClip.js';\nimport ImageClip from './clips/ImageClip.js';\nimport AudioClip from './clips/AudioClip.js';\nimport VideoClip from './clips/VideoClip.js';\nimport SlideShowClip from './clips/SlideShowClip.js';\nimport GIF from 'gif.js/src/GIF';\nimport EffectBase from './effects/EffectBase.js';\n\n/**\n * @class VideoEditor\n * @description The main entry point for users of the p5.videoeditor.js library.\n * It encapsulates the core components like the timeline, playback controls,\n * and managers into a simplified and easy-to-use API.\n *\n * @example\n * // In your p5.js sketch:\n * let editor;\n *\n * function setup() {\n *   createCanvas(1280, 720);\n *   editor = new VideoEditor(p5.instance, { canvas: canvas.elt });\n *\n *   // Create clips and add keyframes using the ergonomic API\n *   editor.createTextClip(\"Hello World\", { start: 1, duration: 5 })\n *     .addKeyframe('x', 0, 100)\n *     .addKeyframe('x', 5000, 500);\n * }\n *\n * async function draw() {\n *   background(0);\n *   editor.update(p5.instance);\n *   await editor.render();\n * }\n */\nclass VideoEditor {\n  /**\n   * @static\n   * @property {ErrorHandler} ErrorHandler - Exposes the static ErrorHandler class for advanced use cases.\n   */\n  static ErrorHandler = ErrorHandler;\n\n  /**\n   * @constructor\n   * @param {p5} p - The p5.js instance. Required for rendering.\n   * @param {object} [options={}] - Configuration options for the editor.\n   * @param {HTMLCanvasElement} [options.canvas=null] - The p5.js canvas element. Required for exporting.\n   * @param {HTMLElement} [options.uiContainer=null] - The container to append the UI controls to.\n   * @param {string} [options.gifWorkerPath=null] - The path to the 'gif.worker.js' file for GIF exporting.\n   * @param {object} [options.performance] - Performance-related settings passed to the PerformanceManager.\n   */\n  constructor(\n    p,\n    {\n      canvas = null,\n      uiContainer = null,\n      gifWorkerPath = './gif.worker.js', // Default path for the distributed worker file\n      ...options\n    } = {}\n  ) {\n    if (!p) {\n      throw new Error(\n        'A p5.js instance must be provided to the VideoEditor constructor.'\n      );\n    }\n    this.options = { gifWorkerPath };\n    this.timeline = new Timeline(p, canvas, options);\n    this.playbackController = new PlaybackController(\n      this.timeline,\n      canvas,\n      uiContainer\n    );\n    this.performanceManager = new PerformanceManager(options.performance);\n    this.memoryManager = new MemoryManager();\n\n    this.play = this.playbackController.play.bind(this.playbackController);\n    this.pause = this.playbackController.pause.bind(this.playbackController);\n    this.seek = this.playbackController.seek.bind(this.playbackController);\n  }\n\n  /**\n   * Exports the timeline animation as a GIF file.\n   * This process is resource-intensive and may take some time.\n   * @param {object} [options={}] - Configuration options for the GIF export.\n   * @param {number} [options.frameRate=15] - The frame rate of the exported GIF.\n   * @param {number} [options.quality=10] - The quality of the GIF encoder. Lower is better.\n   * @param {string} [options.filename='p5.videoeditor-export.gif'] - The filename for the downloaded GIF.\n   * @param {function} [options.onProgress=null] - A callback function that receives the progress (0 to 1).\n   * @returns {Promise<void>} A promise that resolves when the export is complete.\n   * @example\n   * // Basic export\n   * editor.exportGIF();\n   *\n   * // Export with options and progress tracking\n   * editor.exportGIF({\n   *   frameRate: 24,\n   *   quality: 5,\n   *   filename: 'my-animation.gif',\n   *   onProgress: (progress) => {\n   *     console.log(`Export progress: ${Math.round(progress * 100)}%`);\n   *   }\n   * });\n   */\n  async exportGIF({\n    frameRate = 15,\n    quality = 10,\n    filename = 'p5.videoeditor-export.gif',\n    onProgress = null,\n  } = {}) {\n    console.log('Starting GIF export...');\n    const wasPlaying = this.playbackController.isPlaying;\n    const originalTime = this.timeline.time;\n\n    this.pause();\n    this.seek(0);\n\n    const gif = new GIF({\n      workers: 2,\n      quality,\n      workerScript: this.options.gifWorkerPath,\n    });\n\n    const frameDelay = 1000 / frameRate;\n    const totalFrames = Math.floor(this.timeline.duration / frameDelay);\n\n    for (let i = 0; i < totalFrames; i++) {\n      const currentTime = i * frameDelay;\n      this.seek(currentTime);\n      this.update(this.timeline.p);\n      await this.render();\n\n      // addFrame can take a canvas element or a context\n      gif.addFrame(this.timeline.canvas, {\n        copy: true,\n        delay: frameDelay,\n      });\n\n      if (onProgress) {\n        onProgress((i + 1) / totalFrames);\n      }\n    }\n\n    gif.on('finished', (blob) => {\n      const url = URL.createObjectURL(blob);\n      const a = document.createElement('a');\n      a.href = url;\n      a.download = filename;\n      document.body.appendChild(a);\n      a.click();\n      document.body.removeChild(a);\n      URL.revokeObjectURL(url);\n\n      console.log('GIF export finished.');\n\n      // Restore original state\n      this.seek(originalTime);\n      if (wasPlaying) {\n        this.play();\n      }\n    });\n\n    console.log('Rendering GIF frames...');\n    gif.render();\n  }\n\n  /**\n   * Creates a video clip and adds it to the timeline.\n   * @param {string} videoSrc - The source URL of the video file.\n   * @param {object} [options={}] - Configuration options for the VideoClip.\n   * @returns {VideoClip} The newly created VideoClip instance for chaining.\n   * @example\n   * editor.createVideoClip('./assets/my-video.mp4', { start: 0, duration: 10 });\n   */\n  createVideoClip(videoSrc, options = {}) {\n    const clip = new VideoClip(videoSrc, options);\n    this.timeline.addClip(clip);\n    return clip;\n  }\n\n  /**\n   * Creates a slideshow clip and adds it to the timeline.\n   * This clip can contain other clips and be controlled with next() and previous().\n   * @param {object} [options={}] - Configuration options for the SlideShowClip.\n   * @returns {SlideShowClip} The newly created SlideShowClip instance for chaining.\n   * @example\n   * const slideshow = editor.createSlideShowClip({ duration: 20 });\n   * slideshow.addSlide([ editor.createTextClip('First Slide') ]);\n   * slideshow.addSlide([ editor.createTextClip('Second Slide') ]);\n   */\n  createSlideShowClip(options = {}) {\n    const clip = new SlideShowClip(options);\n    this.timeline.addClip(clip);\n    return clip;\n  }\n\n  /**\n   * Creates a text clip and adds it to the timeline.\n   * @param {string} text - The text content of the clip.\n   * @param {object} [options={}] - Configuration options for the TextClip.\n   * @returns {TextClip} The newly created TextClip instance for chaining.\n   * @example\n   * editor.createTextClip('Hello', { start: 1, duration: 3, properties: { y: 100 } })\n   *   .addKeyframe('x', 0, 50)\n   *   .addKeyframe('x', 3000, 250);\n   */\n  createTextClip(text, options = {}) {\n    const clip = new TextClip(text, options);\n    this.timeline.addClip(clip);\n    return clip;\n  }\n\n  /**\n   * Creates a shape clip and adds it to the timeline.\n   * @param {string} shapeType - The type of shape to create (e.g., 'rect', 'circle').\n   * @param {object} [options={}] - Configuration options for the ShapeClip.\n   * @returns {ShapeClip} The newly created ShapeClip instance for chaining.\n   * @example\n   * editor.createShapeClip('rect', { duration: 5, properties: { width: 100, fill: 'red' } });\n   */\n  createShapeClip(shapeType, options = {}) {\n    const clip = new ShapeClip(shapeType, options);\n    this.timeline.addClip(clip);\n    return clip;\n  }\n\n  /**\n   * Creates an image clip and adds it to the timeline.\n   * @param {p5.Image} image - The preloaded p5.Image object.\n   * @param {object} [options={}] - Configuration options for the ImageClip.\n   * @returns {ImageClip} The newly created ImageClip instance for chaining.\n   * @example\n   * // In preload: myImage = p.loadImage('./assets/logo.png');\n   * // In setup:\n   * editor.createImageClip(myImage, { duration: 4 });\n   */\n  createImageClip(image, options = {}) {\n    const clip = new ImageClip(image, options);\n    this.timeline.addClip(clip);\n    return clip;\n  }\n\n  /**\n   * Creates an audio clip and adds it to the timeline.\n   * @param {p5.SoundFile} soundFile - The preloaded p5.SoundFile object.\n   * @param {object} [options={}] - Configuration options for the AudioClip.\n   * @returns {AudioClip} The newly created AudioClip instance for chaining.\n   * @example\n   * // In preload: mySound = p.loadSound('./assets/music.mp3');\n   * // In setup:\n   * editor.createAudioClip(mySound, { start: 0, duration: 15 });\n   */\n  createAudioClip(soundFile, options = {}) {\n    const clip = new AudioClip(soundFile, options);\n    this.timeline.addClip(clip);\n    return clip;\n  }\n\n  /**\n   * Caches an asset manually in the MemoryManager.\n   * @param {string} key - The unique key to store the asset under.\n   * @param {*} asset - The asset to cache (e.g., p5.Image, p5.SoundFile).\n   */\n  cacheAsset(key, asset) {\n    this.memoryManager.addAsset(key, asset);\n  }\n\n  /**\n   * Updates the state of the timeline and all active clips.\n   * @param {p5} p - The p5.js instance.\n   */\n  update(p) {\n    this.performanceManager.monitor(p);\n    this.timeline.update(p);\n\n    const activeAssetKeys = this.timeline\n      .getActiveClips()\n      .map((clip) => clip.assetKey)\n      .filter((key) => key);\n    this.memoryManager.clearUnusedAssets(activeAssetKeys);\n  }\n\n  /**\n   * Renders the current state of the timeline to the canvas.\n   */\n  async render() {\n    await this.timeline.render();\n  }\n\n  /**\n   * Handles mouse press events to check for interactions like hotspot clicks.\n   * This method should be called from the p5.js `mousePressed()` function.\n   * @param {p5} p - The p5.js instance, which provides mouseX and mouseY.\n   * @example\n   * function mousePressed() {\n   *   editor.handleMousePressed(p);\n   * }\n   */\n  handleMousePressed(p) {\n    const activeClips = this.timeline.getActiveClips();\n    // Iterate in reverse order so we check the topmost clips first.\n    for (let i = activeClips.length - 1; i >= 0; i--) {\n      const clip = activeClips[i];\n      if (clip instanceof VideoClip) {\n        const relativeTime = this.timeline.time - clip.start;\n        const wasClicked = clip.checkClick(p, p.mouseX, p.mouseY, relativeTime);\n        if (wasClicked) {\n          // Stop after the first clip that handles the click.\n          break;\n        }\n      }\n    }\n  }\n\n  /**\n   * Displays a user-friendly error message.\n   * @param {Error} error - The error object to display.\n   */\n  showUserFriendlyError(error) {\n    ErrorHandler.showUserFriendlyError(error);\n  }\n}\n\n// Export all the public classes for advanced usage\nexport {\n  VideoEditor,\n  Timeline,\n  PlaybackController,\n  PerformanceManager,\n  MemoryManager,\n  ErrorHandler,\n  ClipBase,\n  TextClip,\n  ShapeClip,\n  ImageClip,\n  AudioClip,\n  VideoClip,\n  SlideShowClip,\n  EffectBase,\n};\n"],"names":[],"mappings":"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"}